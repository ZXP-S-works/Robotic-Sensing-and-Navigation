"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class imu(object):
    __slots__ = ["yaw", "pitch", "roll", "magnetic_x", "magnetic_y", "magnetic_z", "acceleration_x", "acceleration_y", "acceleration_z", "angular_rate_x", "angular_rate_y", "angular_rate_z"]

    def __init__(self):
        self.yaw = 0.0
        self.pitch = 0.0
        self.roll = 0.0
        self.magnetic_x = 0.0
        self.magnetic_y = 0.0
        self.magnetic_z = 0.0
        self.acceleration_x = 0.0
        self.acceleration_y = 0.0
        self.acceleration_z = 0.0
        self.angular_rate_x = 0.0
        self.angular_rate_y = 0.0
        self.angular_rate_z = 0.0

    def encode(self):
        buf = BytesIO()
        buf.write(imu._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">dddddddddddd", self.yaw, self.pitch, self.roll, self.magnetic_x, self.magnetic_y, self.magnetic_z, self.acceleration_x, self.acceleration_y, self.acceleration_z, self.angular_rate_x, self.angular_rate_y, self.angular_rate_z))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != imu._get_packed_fingerprint():
            raise ValueError("Decode error")
        return imu._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = imu()
        self.yaw, self.pitch, self.roll, self.magnetic_x, self.magnetic_y, self.magnetic_z, self.acceleration_x, self.acceleration_y, self.acceleration_z, self.angular_rate_x, self.angular_rate_y, self.angular_rate_z = struct.unpack(">dddddddddddd", buf.read(96))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if imu in parents: return 0
        tmphash = (0x80fef3231591c67a) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if imu._packed_fingerprint is None:
            imu._packed_fingerprint = struct.pack(">Q", imu._get_hash_recursive([]))
        return imu._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

